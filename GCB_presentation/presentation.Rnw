\documentclass{beamer}
\usetheme{metropolis}
\usepackage[utf8]{inputenc}
\usepackage{amsfonts}
\usepackage{amsmath}
\usepackage{natbib}
\usepackage{graphicx}
\usepackage{array,booktabs,tabularx}
\usepackage{epstopdf}
\usepackage{colortbl, xcolor}


\title{AmyloGram:a novel predictor of amyloidogenicity}
\date{}
\author{Micha\l{} Burdukiewicz\inst{1}, Piotr Sobczyk\inst{2}, Stefan R\"{o}diger\inst{3}, Pawe\l{} Mackiewicz\inst{1} and Ma\l{}gorzata Kotulska\inst{4}}
\institute{\small{\textsuperscript{1}University of Wroc\l{}aw, Department of Genomics, 

\textsuperscript{2}Wroc\l{}aw University of Science and Technology, Faculty of Pure and Applied Mathematics,

\textsuperscript{3}Brandenburg University of Technology Cottbus-Senftenberg, Institute of Biotechnology, 

\textsuperscript{4}Wroc\l{}aw University of Science and Technology, Department of Biomedical Engineering}}

\begin{document}
  \maketitle
  \section{Amyloids}
  
  \begin{frame}{}
  <<knitrIntro, echo = FALSE, message=FALSE,warning=FALSE>>=
source("my_ggplot_theme.R")

library(dplyr)
library(reshape2)
library(xtable)
library(biogram)

amyloids_plot <- read.csv("amyloid_plot_data.csv")

levels(amyloids_plot[["et"]]) <- c("Best-performing reduced alphabet", 
                                   "Reduced alphabet", "Full alphabet", 
                                   "Standard reduced alphabet")


amyloids_plot[["len_range"]] <- factor(amyloids_plot[["len_range"]], 
                                       levels = c("Test peptide length: 6 ", "Test peptide length: 7-10", 
                                                  "Test peptide length: 11-15", "Test peptide length: 16-25"))

subdat <- filter(amyloids_plot, pos == "Training peptide length: 6")
@
  
  
    Proteins associated with various neurodegenerative disorders (e.g., Alzheimer's, Parkinson'a's, Creutzfeldta-Jakob'a's diseases) creating harmful aggregates.
    
    \begin{figure} 
\includegraphics[width=0.85\textwidth]{static_figure/amyloid_aggregates.jpg}
\end{figure}

Amyloid aggregates (red) around neurons (green). Strittmatter Laboratory, Yale University
  \end{frame}
  
  \begin{frame}{}
  
  The aggregation of amyloids is initiated by 6- to 15-residue segments called hot spots, diverse subsequences that form unique zipper-like $\beta$-structures.
\begin{figure} 
\includegraphics[width=0.55\textwidth]{static_figure/zipper_structure.jpg}
\end{figure}

\citet{sawaya_atomic_2007}
\end{frame}
  
  \begin{frame}
  Which motifs are associated with amyloidogenicity?
  Does amyloidogenicity depend on the exact sequence of amino acids?
  \end{frame}

\section{Amyloidogenic motifs}

    \begin{frame}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram1.eps}
\end{figure}
  \end{frame}
  

\begin{frame}{Quick Permutation Test}
  Informative n-grams are usually selected using permutation tests.

During a permutation test we shuffle randomly class labels and compute a defined statistic (e.g. information gain). Values of statistic for permuted data are compared with the value of statistic for original data.

$$
\textrm{p-value} = \frac{N_{T_P > T_R}}{N} $$

$N_{T_P > T_R}$: number of cases, where $T_P$ (permuted test statistic) has more extreme values than $T_R$ (test statistic for original data).

$N$: number of permutations.
  \end{frame}
  
\begin{frame}{QuiPT}  
  
  \textbf{Qui}ck \textbf{P}ermutation \textbf{T}est is a fast alternative to permutation tests for n-gram data. It also allows precise estimation of p-value.

QuiPT is avaible as part of the \textbf{biogram} R package.
\end{frame}
  


\begin{frame}{Cross-validation}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.width=14,fig.height=7>>=

ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = NA, outlier.shape = 16, outlier.size = 5, color = NA, fill = NA) +
  geom_point(data = filter(subdat, et == "Full alphabet"), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 5) +
  scale_x_discrete("") +
  scale_y_continuous("Mean AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[3], drop = TRUE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[3], drop = TRUE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Training peptide length: 6") + 
  my_theme + 
  coord_flip()

@
\end{frame}

\section{Reduced amino acid alphabets}
  
\begin{frame}
  Does amyloidogenicity depend on the exact sequence of amino acids?
  \end{frame}
  
    \begin{frame}{Reduced amino acid alphabets}
\begin{figure} 
\includegraphics[width=0.95\textwidth]{static_figure/ngram2.eps}
\end{figure}
  \end{frame}

\begin{frame}{Standard reduced amino acid alphabets}
To date, several reduced amino acid alphabets have been proposed, which have been applied to (among others) protein folding and protein structure prediction~\citep{kosiol_new_2004, melo_accuracy_2006}.
  \end{frame}


    \begin{frame}{Cross-validation}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.width=14,fig.height=7>>=
ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = NA, outlier.shape = 16, outlier.size = 5, color = NA, fill = NA) +
  geom_point(data = filter(subdat, et %in% c("Full alphabet", "Standard reduced alphabet")), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 5) +
  scale_x_discrete("") +
  scale_y_continuous("Mean AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[3L:4], drop = TRUE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[3L:4], drop = TRUE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Training peptide length: 6") + 
  my_theme + 
  coord_flip()

@
  
  \end{frame}


\begin{frame}{Novel reduced amino acid alphabets}

\begin{itemize}
\item 17 measures handpicked from AAIndex database: 
  \begin{itemize}
    \item size of residues, 
    \item hydrophobicity, 
    \item solvent surface area, 
    \item frequency in $\beta$-sheets,
    \item contactivity.
  \end{itemize}
  \item 524 284 amino acid reduced alphabets with different level of amino acid alphabet reduction (three to six amino acid groups).
  \end{itemize}

    \end{frame}
  

\begin{frame}{Cross-validation}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.width=14,fig.height=7>>=
subdat2 <- droplevels(filter(subdat, et != "Best-performing reduced alphabet"))

ggplot(subdat2, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = "grey", outlier.shape = 16, outlier.size = 5, color = "black", fill = "white") +
  geom_point(data = filter(subdat2, et %in% c("Full alphabet", "Standard reduced alphabet")), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 5) +
  scale_x_discrete("") +
  scale_y_continuous("Mean AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15)[2L:4], drop = FALSE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue")[2L:4], drop = FALSE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Training peptide length: 6") + 
  my_theme + 
  coord_flip()

@
  \tiny
Hinges of boxes correspond to 
the 0.25 and 0.75 quartiles. The bar inside the box represents the median. The 
gray circles correspond to the reduced alphabets with the AUC outside the 0.95 
confidence interval.

  
  \end{frame}

  
    \begin{frame}{Cross-validation}
  <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.width=14,fig.height=7>>=

ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
  geom_boxplot(outlier.color = "grey", outlier.shape = 16, outlier.size = 5) +
  geom_point(data = filter(subdat, et != "Reduced alphabet"), 
             aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 5) +
  scale_x_discrete("") +
  scale_y_continuous("Mean AUC") +
  scale_shape_manual("", values = c(16, 16, 15, 15), drop = FALSE) +
  scale_color_manual("", values = c("red", "grey", "green", "blue"), drop = FALSE) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
  #facet_wrap(~ pos, nrow = 3) +
  ggtitle("Training peptide length: 6") + 
  my_theme + 
  coord_flip()
@
  
  \tiny
Hinges of boxes correspond to 
the 0.25 and 0.75 quartiles. The bar inside the box represents the median. The 
gray circles correspond to the reduced alphabets with the AUC outside the 0.95 
confidence interval.

  
  \end{frame}
  
%'     \begin{frame}{Cross-validation}
%'   <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.width=14,fig.height=7>>=
%' subdat <- filter(amyloids_plot, pos == "Training peptide length: 6-10")
%' 
%' ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
%'   geom_boxplot(outlier.color = "grey", outlier.shape = 16, outlier.size = 5) +
%'   geom_point(data = filter(subdat, et != "Reduced alphabet"), 
%'              aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 5) +
%'   scale_x_discrete("") +
%'   scale_y_continuous("Mean AUC") +
%'   scale_shape_manual("", values = c(16, 16, 15, 15), drop = FALSE) +
%'   scale_color_manual("", values = c("red", "grey", "green", "blue"), drop = FALSE) +
%'   guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
%'   #facet_wrap(~ pos, nrow = 3) +
%'   ggtitle("Training peptide length: 6-10") + 
%'   my_theme + 
%'   coord_flip() +
%'   theme(plot.title = element_text(color = "red"))
%' 
%' 
%' @
%'   \tiny
%' Hinges of boxes correspond to 
%' the 0.25 and 0.75 quartiles. The bar inside the box represents the median. The 
%' gray circles correspond to the reduced alphabets with the AUC outside the 0.95 
%' confidence interval.
%' 
%'   \end{frame}

%'     \begin{frame}{}
%'   <<echo = FALSE, message=FALSE,warning=FALSE,fig.align='center',fig.width=14,fig.height=7>>=
%' subdat <- filter(amyloids_plot, pos == "Training peptide length: 6-15")
%' 
%' ggplot(subdat, aes(x = len_range, y = AUC_mean)) +
%'   geom_boxplot(outlier.color = "grey", outlier.shape = 16, outlier.size = 5) +
%'   geom_point(data = filter(subdat, et != "Reduced alphabet"), 
%'              aes(x = len_range, y = AUC_mean, color = et, shape = et), size = 5) +
%'   scale_x_discrete("") +
%'   scale_y_continuous("Mean AUC") +
%'   scale_shape_manual("", values = c(16, 16, 15, 15), drop = FALSE) +
%'   scale_color_manual("", values = c("red", "grey", "green", "blue"), drop = FALSE) +
%'   guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2)) + 
%'   #facet_wrap(~ pos, nrow = 3) +
%'   ggtitle("Training peptide length: 6-15") + 
%'   my_theme + 
%'   coord_flip()
%' 
%' 
%' @
%'   \end{frame}  


\begin{frame}{Alphabet similarity and performance}
Is the best-performing reduced amino alphabet associated with amyloidogenicity?
\end{frame}

\begin{frame}{Similarity index}
<<echo = FALSE,message=FALSE,fig.align='center',fig.width=14,fig.height=6.3,warning=FALSE>>=
si_dat <- read.csv2("si_dat.csv")

levels(si_dat[["et"]]) <- c("Best-performing reduced alphabet", 
                            "Reduced alphabet", "Full alphabet", 
                            "Standard reduced alphabet", 
                            "Standard reduced alphabet")


ggplot(si_dat, aes(x=si, y=AUC_mean)) + 
  # geom_point(data = si_dat, 
  #            aes(x = si, y = AUC_mean, color = et, shape = et), size = 4) +
  #geom_density_2d(color = "black", contour = TRUE) +
    geom_bin2d(bins = 30) +
  # stat_density2d(aes(fill=..level..), color = "black",
  #                contour = TRUE, geom = "polygon", alpha = 0.5, binwidth = 50, bins = 10) +
  scale_fill_continuous("Count", low = "#d4d4d4", high = "#5c5c5c") +
  xlab("Similarity index") +
  ylab("AUC") +
  my_theme +
  geom_point(data = droplevels(filter(si_dat, et != "Reduced alphabet")),
             aes(x = si, y = AUC_mean, color = et, shape = et), size = 4) +
  guides(color = guide_legend(nrow = 2), shape = guide_legend(nrow = 2), 
         fill = guide_colorbar(barwidth = unit(50, "line"))) +
  scale_shape_manual("", values = c(16, 15, 15), drop = FALSE) +
  scale_color_manual("", values = c("red", "green", "blue"), drop = FALSE) +
  theme(panel.grid.major = element_line(color = "lightgrey", size = 0.5)) 

@
Similarity index~\citep{stephenson_unearthing_2013} measures the similarity between two reduced alphabets (1 - identical, 0, totally dissimilar).
\end{frame}

\section{Knowledge-discovery}

\begin{frame}{}
Are informative n-grams found by QuiPT associated with amyloidogenicity?
\end{frame}


\begin{frame}{Informative n-grams}
<<echo = FALSE,message=FALSE,fig.align='center',fig.width=14,fig.height=6,warning=FALSE>>=
ngram_freq <- read.csv("ngram_freq.csv")

ngram_freq_plot <- mutate(ngram_freq, decoded_name = gsub("_", "-", decoded_name)) %>%
  mutate(decoded_name = factor(decoded_name, levels = as.character(decoded_name)),
         amyloid = diff_freq > 0) %>%
  melt() %>%
  filter(variable %in% c("pos", "neg"),
         association != "Not found") %>%
  droplevels %>%
  mutate(variable = factor(variable, labels = c("Amyloid", "Non-amyloid")))

ggplot(ngram_freq_plot, aes(x = decoded_name, y = value)) +
  geom_bar(aes(fill = variable), position = "dodge", stat = "identity") +
  geom_point(data = group_by(ngram_freq_plot, decoded_name)  %>% filter(value == max(value)),
             aes(y = value + 0.004, shape = association), size = 6) +
  scale_fill_manual("", values = c("gold", "darkmagenta")) +
  scale_shape_manual("Motif:", breaks = c("Amyloidogenic", "Non-amyloidogenic"), values = c(16, 17, NA)) +
  scale_y_continuous("Frequency") +
  scale_x_discrete("") +
  my_theme +
  theme(panel.grid.major.y = element_line(color = "lightgrey", size = 0.5)) 

@

Out of 65 the most informative n-grams, 15 (23\%) were also found in the motifs validated experimentally~\citep{paz_sequence_2004}.
\end{frame}

\begin{frame}
Amino acid properties used to create the best-performing amino acid alphabet reveal the role of amino acid flexibility in the creation of amyloid aggregate.
\end{frame}

\section{Benchmark and summary}

\begin{frame}
Is performance of the AmyloGram, the classifier based on the best-performing reduced amino acid alphabet, also adequate on the independent dataset?
\end{frame}


\begin{frame}{Benchmark results}

\begin{table}[ht]
\centering

\begin{tabular}{ccccc}
  \toprule
Classifier & AUC & MCC \\ 
  \midrule
AmyloGram & \textbf{0.8972} & \textbf{0.6307} \\ 
  \rowcolor{white}PASTA 2.0\citep{walsh_pasta_2014} & 0.8550 & 0.4291  \\ 
   FoldAmyloid \citep{garbuzynskiy_foldamyloid:_2010} & 0.7351 & 0.4526  \\ 
  \rowcolor{white}APPNN \citep{familia_prediction_2015} & 0.8343 & 0.5823  \\ 
   \bottomrule
\end{tabular}
\end{table}

The predictor based on the best-performing alphabet, called AmyloGram, was benchmarked against the most popular tools for the detection of amyloid peptides using an external data set \textit{pep424}.

\end{frame}

\begin{frame}{Summary}

We identified a group of reduced amino acid alphabets which capture properties of amyloids. 

Our algorithm was also capable of extracting n-gram associated with amyloidogenicity, partially confirming experimental results.

Our software is available as a web-server: \url{smorfland.uni.wroc.pl/amylogram}.

n-gram analysis workflow is implemented in the R package \textbf{biogram}: \url{https://cran.r-project.org/package=biogram}.

\end{frame}

\begin{frame}{Funding}

This research was partially funded by the KNOW Consortium and National Science Center (2015/17/N/NZ2/01845).

\end{frame}



\begin{frame}[allowframebreaks]
        \frametitle{References}
  \bibliographystyle{apalike}
  \bibliography{references}
\end{frame}  
\end{document}